#usda 1.0
(
    customLayerData = {
        string creator = "Reality Composer Pro Version 2.0 (448.0.16.0.3)"
    }
    defaultPrim = "Root"
    metersPerUnit = 1
    upAxis = "Y"
)

def Xform "Root"
{
    def Xform "Root"
    {
        float2 ui:nodegraph:node:pos = (20, 20)
        int ui:nodegraph:node:stackingOrder = 1
        quatf xformOp:orient = (1, 0, 0, 0)
        float3 xformOp:scale = (1, 1, 1)
        float3 xformOp:translate = (0, 0, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        def Cube "Cube" (
            active = true
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            reorder nameChildren = ["Cherenkov", "DefaultMaterial", "Collider", "RigidBody"]
            rel material:binding = </Root/Root/Cube/DefaultMaterial>
            double size = 0.2
            quatf xformOp:orient = (1, 0, 0, 0)
            float3 xformOp:scale = (4, 4, 6)
            float3 xformOp:translate = (0, 0.4001227, 0)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

            def Material "DefaultMaterial"
            {
                token outputs:mtlx:surface
                token outputs:realitykit:vertex
                token outputs:surface.connect = </Root/Root/Cube/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                def Shader "DefaultSurfaceShader"
                {
                    uniform token info:id = "UsdPreviewSurface"
                    color3f inputs:diffuseColor = (1, 1, 1)
                    float inputs:roughness = 0.75
                    token outputs:surface
                }
            }

            def RealityKitComponent "Collider"
            {
                uint group = 1
                uniform token info:id = "RealityKit.Collider"
                uint mask = 4294967295
                token type = "Default"

                def RealityKitStruct "Shape"
                {
                    float3 extent = (0.2, 0.2, 0.2)
                    token shapeType = "Box"

                    def RealityKitStruct "pose"
                    {
                    }
                }
            }

            def RealityKitComponent "RigidBody"
            {
                bool gravityEnabled = 0
                uniform token info:id = "RealityKit.RigidBody"
                token motionType = "Static"

                def RealityKitStruct "massFrame"
                {
                    def RealityKitStruct "m_pose"
                    {
                    }
                }

                def RealityKitStruct "material"
                {
                }
            }
        }

        def "sample_tile_4" (
            active = true
            references = @sample-tile.usdz@
        )
        {
            reorder nameChildren = ["Materials", "Geom", "Collider", "RigidBody", "InputTarget", "Sphere", "Cherenkov"]
            float2 ui:nodegraph:node:pos = (40, 40)
            int ui:nodegraph:node:stackingOrder = 2
            quatf xformOp:orient = (1, 0, 0, 0)
            float3 xformOp:scale = (0.082302645, 0.082302645, 0.082302645)
            float3 xformOp:translate = (0, 0.84290576, 0)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

            def RealityKitComponent "Collider"
            {
                uint group = 1
                uniform token info:id = "RealityKit.Collider"
                uint mask = 4294967295
                token type = "Default"

                def RealityKitStruct "Shape"
                {
                    float3 extent = (2, 0.48286235, 2)
                    token shapeType = "Box"

                    def RealityKitStruct "pose"
                    {
                    }
                }
            }

            def RealityKitComponent "RigidBody"
            {
                uniform token info:id = "RealityKit.RigidBody"
                bool isCCDEnabled = 0
                token motionType = "Dynamic"

                def RealityKitStruct "massFrame"
                {
                    float m_mass = 0.015

                    def RealityKitStruct "m_pose"
                    {
                    }
                }

                def RealityKitStruct "material"
                {
                    double dynamicFriction = 0
                    double restitution = 0.3
                    double staticFriction = 2
                }
            }

            def RealityKitComponent "InputTarget"
            {
                uniform token info:id = "RealityKit.InputTarget"
            }

            def Sphere "Sphere" (
                active = true
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                rel material:binding = </Root/Root/Material> (
                    bindMaterialAs = "weakerThanDescendants"
                )
                double radius = 0.05
                quatf xformOp:orient = (0.99999994, 0, 0, 0)
                float3 xformOp:scale = (12.150277, 12.150277, 12.150277)
                float3 xformOp:translate = (0, 2.893201, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                def Material "DefaultMaterial"
                {
                    token outputs:mtlx:surface
                    token outputs:realitykit:vertex
                    token outputs:surface.connect = </Root/Root/sample_tile_4/Sphere/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                    def Shader "DefaultSurfaceShader"
                    {
                        uniform token info:id = "UsdPreviewSurface"
                        color3f inputs:diffuseColor = (1, 1, 1)
                        float inputs:roughness = 0.75
                        token outputs:surface
                    }
                }

                def RealityKitComponent "RigidBody"
                {
                    bool gravityEnabled = 0
                    uniform token info:id = "RealityKit.RigidBody"
                    token motionType = "Dynamic"

                    def RealityKitStruct "massFrame"
                    {
                        def RealityKitStruct "m_pose"
                        {
                        }
                    }

                    def RealityKitStruct "material"
                    {
                    }
                }

                def RealityKitComponent "VFXEmitter"
                {
                    uniform token info:id = "RealityKit.VFXEmitter"

                    def RealityKitStruct "currentState"
                    {
                        token birthLocation = "Volume"
                        double emissionDuration = 3
                        token emitterShape = "Sphere"

                        def RealityKitStruct "mainEmitter"
                        {
                        }

                        def RealityKitStruct "spawnedEmitter"
                        {
                        }
                    }
                }
            }

            over "Materials"
            {
                over "Material_001"
                {
                    token outputs:mtlx:surface
                    token outputs:realitykit:vertex
                }

                over "Material"
                {
                    token outputs:mtlx:surface
                    token outputs:realitykit:vertex
                }
            }

            def "Cherenkov" (
                active = true
                references = @Cherenkov.usdz@
            )
            {
                int ui:nodegraph:node:stackingOrder = 1
                quatf xformOp:orient = (1, 0, 0, 0)
                float3 xformOp:scale = (6.2004275, 6.2004275, 6.2004275)
                float3 xformOp:translate = (6.597844, -0.2130213, -4.551324)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
            }
        }

        def Material "Material"
        {
            token outputs:mtlx:surface.connect = </Root/Root/Material/PreviewSurface.outputs:out>
            token outputs:realitykit:vertex
            float2 ui:nodegraph:realitykit:subgraphOutputs:pos = (335.5, 100.5)

            def Shader "PreviewSurface"
            {
                uniform token info:id = "ND_UsdPreviewSurface_surfaceshader"
                color3f inputs:diffuseColor = (1, 1, 1) (
                    colorSpace = "srgb_displayp3"
                )
                float inputs:metallic = 1
                float inputs:roughness = 0
                token outputs:out
                float2 ui:nodegraph:node:pos = (93.5, 100.5)
                int ui:nodegraph:node:stackingOrder = 9
            }
        }

        def "sample_tile_5" (
            active = true
            references = @sample-tile.usdz@
        )
        {
            reorder nameChildren = ["Materials", "Geom", "Collider", "RigidBody", "InputTarget", "Sphere"]
            float2 ui:nodegraph:node:pos = (60, 60)
            int ui:nodegraph:node:stackingOrder = 3
            quatf xformOp:orient = (1, 0, 0, 0)
            float3 xformOp:scale = (0.082302645, 0.082302645, 0.082302645)
            float3 xformOp:translate = (0.13820565, 0.84290576, -0.3833991)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

            def RealityKitComponent "Collider"
            {
                uint group = 1
                uniform token info:id = "RealityKit.Collider"
                uint mask = 4294967295
                token type = "Default"

                def RealityKitStruct "Shape"
                {
                    float3 extent = (2, 0.48286235, 2)
                    token shapeType = "Box"

                    def RealityKitStruct "pose"
                    {
                    }
                }
            }

            def RealityKitComponent "RigidBody"
            {
                uniform token info:id = "RealityKit.RigidBody"
                bool isCCDEnabled = 0
                token motionType = "Dynamic"

                def RealityKitStruct "massFrame"
                {
                    float m_mass = 0.015

                    def RealityKitStruct "m_pose"
                    {
                    }
                }

                def RealityKitStruct "material"
                {
                    double dynamicFriction = 0
                    double restitution = 0.3
                    double staticFriction = 2
                }
            }

            def RealityKitComponent "InputTarget"
            {
                uniform token info:id = "RealityKit.InputTarget"
            }

            def Sphere "Sphere" (
                active = true
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                rel material:binding = </Root/Root/Material> (
                    bindMaterialAs = "weakerThanDescendants"
                )
                double radius = 0.05
                quatf xformOp:orient = (0.99999994, 0, 0, 0)
                float3 xformOp:scale = (12.150277, 12.150277, 12.150277)
                float3 xformOp:translate = (0, 2.893201, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                def Material "DefaultMaterial"
                {
                    token outputs:mtlx:surface
                    token outputs:realitykit:vertex
                    token outputs:surface.connect = </Root/Root/sample_tile_5/Sphere/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                    def Shader "DefaultSurfaceShader"
                    {
                        uniform token info:id = "UsdPreviewSurface"
                        color3f inputs:diffuseColor = (1, 1, 1)
                        float inputs:roughness = 0.75
                        token outputs:surface
                    }
                }

                def RealityKitComponent "RigidBody"
                {
                    bool gravityEnabled = 0
                    uniform token info:id = "RealityKit.RigidBody"
                    token motionType = "Dynamic"

                    def RealityKitStruct "massFrame"
                    {
                        def RealityKitStruct "m_pose"
                        {
                        }
                    }

                    def RealityKitStruct "material"
                    {
                    }
                }
            }

            over "Materials"
            {
                over "Material_001"
                {
                    token outputs:mtlx:surface
                    token outputs:realitykit:vertex
                }
            }
        }

        def "sample_tile_6" (
            active = true
            references = @sample-tile.usdz@
        )
        {
            reorder nameChildren = ["Cherenkov", "Materials", "Geom", "Collider", "RigidBody", "InputTarget", "Sphere"]
            float2 ui:nodegraph:node:pos = (80, 80)
            int ui:nodegraph:node:stackingOrder = 4
            quatf xformOp:orient = (1, 0, 0, 0)
            float3 xformOp:scale = (0.082302645, 0.082302645, 0.082302645)
            float3 xformOp:translate = (0.13820565, 0.84290576, 0.31608647)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

            def RealityKitComponent "Collider"
            {
                uint group = 1
                uniform token info:id = "RealityKit.Collider"
                uint mask = 4294967295
                token type = "Default"

                def RealityKitStruct "Shape"
                {
                    float3 extent = (2, 0.48286235, 2)
                    token shapeType = "Box"

                    def RealityKitStruct "pose"
                    {
                    }
                }
            }

            def RealityKitComponent "RigidBody"
            {
                uniform token info:id = "RealityKit.RigidBody"
                bool isCCDEnabled = 0
                token motionType = "Dynamic"

                def RealityKitStruct "massFrame"
                {
                    float m_mass = 0.015

                    def RealityKitStruct "m_pose"
                    {
                    }
                }

                def RealityKitStruct "material"
                {
                    double dynamicFriction = 0
                    double restitution = 0.3
                    double staticFriction = 2
                }
            }

            def RealityKitComponent "InputTarget"
            {
                uniform token info:id = "RealityKit.InputTarget"
            }

            over "Materials"
            {
                over "Material_001"
                {
                    token outputs:mtlx:surface
                    token outputs:realitykit:vertex
                }
            }

            def Sphere "Sphere" (
                active = true
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                rel material:binding = </Root/Root/Material> (
                    bindMaterialAs = "weakerThanDescendants"
                )
                double radius = 0.05
                quatf xformOp:orient = (0.99999994, 0, 0, 0)
                float3 xformOp:scale = (12.150277, 12.150277, 12.150277)
                float3 xformOp:translate = (0, 2.893201, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

                def Material "DefaultMaterial"
                {
                    token outputs:mtlx:surface
                    token outputs:realitykit:vertex
                    token outputs:surface.connect = </Root/Root/sample_tile_6/Sphere/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

                    def Shader "DefaultSurfaceShader"
                    {
                        uniform token info:id = "UsdPreviewSurface"
                        color3f inputs:diffuseColor = (1, 1, 1)
                        float inputs:roughness = 0.75
                        token outputs:surface
                    }
                }

                def RealityKitComponent "RigidBody"
                {
                    bool gravityEnabled = 0
                    uniform token info:id = "RealityKit.RigidBody"
                    token motionType = "Dynamic"

                    def RealityKitStruct "massFrame"
                    {
                        def RealityKitStruct "m_pose"
                        {
                        }
                    }

                    def RealityKitStruct "material"
                    {
                    }
                }
            }
        }
    }
}

